// Generated by view binder compiler. Do not edit!
package com.example.task_1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.task_1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CameraUiContainerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton cameraCaptureButton;

  @NonNull
  public final ImageButton cameraSwitchButton;

  @NonNull
  public final ConstraintLayout cameraUiContainer;

  @NonNull
  public final ImageButton photoViewButton;

  private CameraUiContainerBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton cameraCaptureButton, @NonNull ImageButton cameraSwitchButton,
      @NonNull ConstraintLayout cameraUiContainer, @NonNull ImageButton photoViewButton) {
    this.rootView = rootView;
    this.cameraCaptureButton = cameraCaptureButton;
    this.cameraSwitchButton = cameraSwitchButton;
    this.cameraUiContainer = cameraUiContainer;
    this.photoViewButton = photoViewButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CameraUiContainerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CameraUiContainerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.camera_ui_container, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CameraUiContainerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.camera_capture_button;
      ImageButton cameraCaptureButton = ViewBindings.findChildViewById(rootView, id);
      if (cameraCaptureButton == null) {
        break missingId;
      }

      id = R.id.camera_switch_button;
      ImageButton cameraSwitchButton = ViewBindings.findChildViewById(rootView, id);
      if (cameraSwitchButton == null) {
        break missingId;
      }

      ConstraintLayout cameraUiContainer = (ConstraintLayout) rootView;

      id = R.id.photo_view_button;
      ImageButton photoViewButton = ViewBindings.findChildViewById(rootView, id);
      if (photoViewButton == null) {
        break missingId;
      }

      return new CameraUiContainerBinding((ConstraintLayout) rootView, cameraCaptureButton,
          cameraSwitchButton, cameraUiContainer, photoViewButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
